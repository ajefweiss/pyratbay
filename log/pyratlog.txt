*****  Sun Jun  8 12:22:40 EDT 2014  *****

State summary:
--------------

To run (from run folder):
../src/pyrat.py -c config_pyrat00.cfg

Files:
------
pyrat.py:  Main code that call all sub-routines.
argum.py:  Process command-line arguments.
           Check inputs (files exist, physically acceptable values).
makesample.py:  makewn: make wavenumber sample for pyrat object:
                        p.wn, p.wnlow, p.wnhigh, p.wnstep, p.wnsize
readatm.py:  getkeywords: Read the keyword values from the atm file.
             getconstants: Read constant molecular values
             getprofiles: Read profile data table (rad, press, temp, abundances)
                          and calculate mean molec. mass and density.
             IGLdensity: Calculate pdensity using Ideal gas law.
readlinedb.py: readlinedb: read data bases headers, Iso names, masses, z, & c.
               TBD: Make checkrange to give only warnings if needed.
               Next read line transitions info (in C!).

Issues:
-------
pt.msg cut's file paths in the middle of it.  It also doesn't obey linebreaks.
/home/patricio/ast/esp01/bart/develop/BART/inputs/atmosph_new.dat


*****  Sun Jun 15 16:13:44 EDT 2014  *****

readlinedb.py:  Renamed readlinedb to readheader.  Wrote checkrange.
ptools:  Added warning function.  Adapted msg to print sentences (i.e.
         separate by \n).  Set up call to readlinetransition.
pconstants.py:  Added maxnamelen and strfmt.
objects.py:  Structured the linetransition, databases and isotopes classes.


*****  Sun Jun 22 13:40:06 EDT 2014  *****

Current plan: read line transitions in Python, send to cpyrat.  Check times.

readlinedb.py: Wrote readlintransition function.
ptools.py: Implemented binary search for TLI file.
pconstants.py added tlireclen.


*****  Sun Jun 29 12:45:21 EDT 2014  *****

I will use the log-pressure array as the base for the layers sampling.
Changed pyrat.atm -> pyrat.atmf  (the input atmospheric file)
Now pyrat.atm will be the modeling atm.

object.py: Renamed pyrat.uin -> pyrat.user
makesample.py: Started writing makeradius, Do Hydrostatic-Equilibrium
               calculation to get radius as a
               function of pressure, then interpolate to get pyrat.atm vals.


*****  Sun Jul  6 12:13:29 EDT 2014  *****

No pyrat work this week.  Put lineread up to date, for use with multiple
databases.


*****  Sun Jul 27 14:07:20 EDT 2014  *****

Upgrade pylineread from 4.0 to 5.0:
Main difference: 5.0 contains the molecule name for the isotope.

Moved /home/patricio/ast/esp01/bart/pylineread/
to    /home/patricio/ast/esp01/bart/pylineread/pylineread4.0

Created /home/patricio/ast/esp01/bart/pylineread/pylineread5.0
with new implementation.

Modification from lineread v4.0:

- Changed endianness 'magic' variable to 'endian', changed the value to
  'b' or 'l' to be less criptic.
- Change wavelength to wavenumber
- Added isotopic abundance ratio info in TLI file.
- Added nTransitions before writting the transition data.
- Changed order in which the transition data is written: instead of
  wl1, id1, el1, gf1, wl2, id2, ... gfN.   do:
  wl1, wl2, ..., wlN, id1, id2, ... gfN.

updated PS, HIT, and TiO.

VO data is in: /home/esp01/code/bart/data/opacities/VO/


*****  Sun Aug  3 14:02:37 EDT 2014  *****

Adapt pyrat to pylineread5.0:
- Edited: - readlinedb.py
          - ptools.py

Updatded pyrat to work with pylineread5.0.  On the way fixed a couple of bugs:
  - readlinedb.py: The very last step when I count the number of transitions
    to read.
  - binsearch: Handle case when the sequential search went beyond boundaries.

I had to hack a few things, but will do a real test once we have /usr/local/
working again.  I foresee no troubles between now and then.

Stored old code in: /home/patricio/ast/esp01/pyrat/develop/old/readlinedb4.0/

That's it for now, I can't get much further without scipy working.  Now I will
continue upgrading transit to make it efficient.


*****  Sun Aug 10 13:37:02 EDT 2014  *****

Updated makewavenumner in makesample.py to print a warning on the modified
last sample point.  Also, make the sample to stay inside the user-defined
boundary.

In makeradius, changed interpolation kind from 'cubic' to 'slinear' because
cubic was failing.  Implemented partition-function interpolation from
pyrat.lt.db to pyrat.iso.

Fixed bug in readline.py: I was adding db.niso to iso.niso for each isotope
rather than for each db.


*****  Sun Aug 17 14:53:42 EDT 2014  *****

argum.c:
  - Removed maxratio argument. Added Tmin and Tmax arguments.
  - Updated calls pt.exit -> pt.error.
  - Updated string formatting calls (% -> {} format).
  - Added Doppler/Lorentz widths handling.

objects.py:
  - Added voigt and extinction objects and related variables.

readatm.py:
  - Using new molecules.dat file.  Added molecule symbol and universal ID info.

extinction.py:
  - Started extinction calculation.  Implemented The Doppler, Lorentz-width
    limits calculation and calculate the arrays.

pyrat.py:
  - Added ex.voigt() step.

Next to do: Calculate the Voigt-profiles grid.


*****  Sun Aug 24 12:55:13 EDT 2014  *****

extinction.py:
  - Implemented the calcvoigt() function to calculate the Voigt profiles.  The
    function uses a modified version of transit's newprofile wrapper and
    voigt.c module (modified as header file voigt.h).

Created the vprofile.c C-extension module:
  - Python wrapper to calculate the Voigt profile (called from extinction's
    calcvoigt() function).

voigt.h:
  - Copied and modified file from the transit project.

argum.py:
  - Renamed LDthresh to DLratio.


*****  Sun Aug 31 13:11:27 EDT 2014  *****

Implement cia.py to Read and interpolate the Collision Induced absorption.
  - Wrote two separate functions to read and interpolate the CIA absorption.
  - Investigate a bit more if I'm calculating well the extinction.

makesample.py:
  - makeradius(): Added molecular abundance and density profiles interpolation.
                  Updated most printing syntax.

pconstants.py:
  - Added amagat.


*****  Sun Jan 18 15:36:52 EST 2015  *****

Checking PyRaT status:
 + rename pyrat.user to pyrat.inputs
 - rewrite voigt to mimic current transit version
 - implement readlinedb's line-info read (think well how to proceed!)
   - can I make one single calc-extinction function?
 - replace toomuch by taumax.
 - rework makeradius to mimic current transit version.
 + move makesample.py pyrat.user checks to argum.py (mostly)
 + added pyrat.molfile.
 + set defaults for the Doppler and Lorentz widths.
 + removed wn nspec, added wnosamp.

 + implemented isgreater in argum.py to check if a value is greater
   than a given threshold.

"Moved (most) of input checks from makesample.py to argum.py.
Implemented isgreater in argum.py to check if a value is greater than
a given threshold."


*****  Mon Jan 19 09:56:24 EST 2015  *****

Today is not Sunday, but it's holiday.  So, let's get into it:

New PyRaT status:
 + Rewrite voigt to mimic current transit version
 - Implement readlinedb's line-info read (think well how to proceed!)
   - Can I make one single calc-extinction function?
 + Rename toomuch by maxdepth.
 + Rework makeradius (see below)
 + Finished cleaning makeradius of input checks.
 + Removed minelow, voigtbin.
 + Update readatm to new format.

- If atm file contains radius, take it.
  Else, calculate it with hydrostatic equilibrium.

- pmin and pmax constrain the atmospheric layers to those within
  [pmin, pmax] but no resample.
- radmin and radmax override pmax and pmin.  Still no resample.

- If nlayers is defined, resample to equi-spaced Delta logP sample.
- If radstep is defined, resample to equi-spaced Delta radius.

- readatm woks for two atm-file column configurations:
    [radius] pressure temperature abundace1 ... abundanceN
  (radius is optional).

Removed voigtbin.  Made voigt.c human-understandable.


*****  Sun Jan 25 11:42:01 EST 2015  *****

Added tstep to argum.py, some minor comment adjustments.

Worked in extinction.py, wrote most of opacity function, wrote
read_extinction function, started calc_extinction function; functions
need proper documentation.

Added extcoef.c function to calculate the extinction coefficient at a
given layer, work in progress, needs comments and documentation.

Some updates to objects.py.

Added pprint function to ptools to print arrays in a nicer way.


*****  Sun Feb  1 13:24:50 EST 2015  *****

This will be the package structure from now on:

 -pyrat/
   |--lineread.py
   |--pyrat.py
   |
   |--pysrc/
   |--csrc/
   |--inputs/
   |--log/
   |--run/

Copied pylineread from transit repo into pyrat repo.  Merged with
pylineread5.0 (/home/patricio/ast/esp01/bart/pylineread/pylineread5.0/).
Rename as lineread.py.

Differences with transit repo:
- Endian encoding.
- wavelength --> wavenumber.

This week:
Re-engineered the package folders structure.
Finished vprofile function.
Added divisors function to ptools.
Fixed bug with species collision radius units.
Added extinction-coefficient C-routines to the repo.
Added lineread module (adapted to the pyrat code).


*****  Sun Feb  8 12:44:57 EST 2015  *****

Proof-of-concept, return pointers from C to Python:
  /home/patricio/ast/esp01/code/tests/python/pypointer

import vprofile as v
a = np.arange(10.) * np.pi
p = v.parse(a, 2, 3)
r = v.duplicate(p, 3)

But it appears to be breaking upon closure, ask Nate.

Open questions:
 - Can I keep a C pointer in C? What data type is?
 - How can I slice a PyArrayObject in C?

Renamed folders pysrc/ to src_Py/ and csrc/ to src_C/.
Started writing optical-depth module.
Finished writing (general) extinction-coefficient calculation C and
Python functions, runs from end to end, need to compare against
transit code.
Started sketching ext. coeff. interpolation function.
Fixed bugs in downsample function.
Found issues at the wavenumber ends, it appears it's not calculating
well the EC there.
Fixed bug in makerad sampling boundaries.
Fixed bug in makewn over-sampling array.
Fixed bug with linetransition isoid data type, added isoratio to
isotopes object, added index to voigt object, renamed profsize to size
in voigt object, added ec to extinction object.  Defined optdepth
object.


*****  Sun Mar  8 12:26:02 EDT 2015  *****

Done today:
- Renamed the repo from pyrat to Pyrat-Bay.  Made the repo private.
- Put the pyrat git repo into the Pyrat-Bay Github repo.
- Sorted repo folders.

Define the input atmospheric format:
- Per-layer data will have: pressure temperature abundances (no radius).
- Data is ordered from top layer to bottom layer.
- "#" indicate comments.
- "@" indicate a keyword:
  - '@ABUNDANCE' indicates if abundance is by mass or number.
  - '@PRESSURE' indicates the pressure units.
  - '@RADIUS indicates the radius units.
  - '@TEMPERATURE indicates the temperature units.
  - '@SPECIES' indicates the list of species.
  - '@DATA' indicates the per-layer data.

Reformated the atmospheric file.  Added current CIA files to repo.
Updated the config file.
Fixed readatm and makesample to read new format of atmospheric file.

"Updated the CIA inputs and cia.py to use the same format as the
atmospheric files."

"Implemented extinction-coefficient interpolation C code.  Need to test
the results.  Implemented valueinarray C code for pyrat.  Fixed bugs
in argum, extinction, and calc_extinction functions.
Added makeatm.py and optdepth.py to repo."


*****  Sun Mar 22 11:23:28 EDT 2015  *****

- Removed outdated atmospheric files.
- Need to reformat the atmospheric file:
   /home/patricio/ast/esp01/pyrat/develop/inputs/HD209458b.atm
  and add it to the repo.

While we ignore a wavelength-dependent refraction, we can assume that
the raypath at a given impact parameter will allways be the same.

Swapped axes of pyrat.cia.ec to be the same of pyrat.extinction.ec:
  [nlayers, nspec]

Fixed error in CIA interpolation, I was multiplying by q instead of density.
Recalculated the whole CIA thing:
   density in amagat = d/(mass*amu) / n0,
Then:  e[cm-1] = e[cm-1 amagat-2] * amagat^2

Renamed interpolated-CIA extinction coefficient from extinc to ec.
Got first version of optdepth running.  Seems slow with python
integrator (Simpson).  Implemented C Simpson rule (taken from scipy
implementation).  The integrator works.

I need to incorporate it to the Pyrat project next.


*****  Sun Apr  5 12:41:12 EDT 2015  *****

Timestamps (With scipy integrator):
 Init:      0.000072
 Parse:     0.004832
 Inputs:    0.000398
 Wnumber:  12.822058
 Atm:       0.008221
 TLI:       0.511607
 Layers:    2.869796
 Voigt:     7.960232
 CIAr:      0.009357
 Ext:       0.000016
 CIAi:      0.030816
 Depth:    41.095787

Timestamps (With my integrator):
 Init:      0.000071
 Parse:     0.004585
 Inputs:    0.000398
 Wnumber:  13.789642
 Atm:       0.006481
 TLI:       0.378715
 Layers:    2.849655
 Voigt:     7.538518
 CIAr:      0.009691
 Ext:       0.000021
 CIAi:      0.029577
 Depth:    12.534473

Added spectrum.py module.
Added timestamps to pyrat.py.
Added rstar argument for stellar radius.
Fixed bugs with simpson integration, results now are idential (within
  machine error) with scipy, though, my reoutine is faster.
Added temporary timestamps to makewavenumber.  The linspace for the
  oversampled array takes too long, find alternatives (C?).
Finished first running version of optdepth for transit geometry.

Known issues:
- The molecular extinction does not seem to be saveing the values (I
  see a lot o zeros).
- The transit spectrum is not right, somewhere in extinction/optical
  depth/modulation, there are problems.

Compare results against: /home/patricio/ast/esp01/bart/transit/pyrat/


*****  Sun Apr 12 11:35:21 EDT 2015  *****

- Renamed transit config file to transit_pyrat.cfg,
  added eclipse config file: eclipse_pyrat.cfg.
- Fixed bug in extinction function for on-the-fly run.
- Stored line strength in array to avoid re-calculation.  Got a speed-up
  of ~20% in C extinction function.
- Created constants.h with constant values used in the C code.
- Added raygrid argument.
- Implemented eclipse geometry calculations in optdepth and spectrum.
- Implemented C blackbody function to calculate the Planck function.
- Implemented cutils file with C utilities.
- Corrected +/- sign in modulation spectrum integration.

- Pyrat transit geometry seems to be working now (reasonable qualitative
  results).  Transit seems to have a bug!  the baseline decreases when
  added line opacities.
- Pyrat agrees with Transit when there are no line opacities.
- Extinction is nearly twice as fast as Transit.
- Transit-Pyrat eclipse results agree: typically to < 1%, worst cases < 7%.

Timestamps (for eclipse run):
 Init:       0.000078
 Parse:      0.004777
 Inputs:     0.000484
 Wnumber:    0.597169
 Atmosph:    0.006526
 TLI:        0.136400
 Layers:     2.961549
 Voigt:      4.829901
 CIA read:   0.009702
 Extinct:    0.000023
 CIA intp:   0.029906
 O.Depth:   25.236646
 Spectrum:   0.472914

Up next, Check code including an opacity grid.


*****  Sun Apr 26 11:48:55 EDT 2015  *****

- Fixed bug in valueinarray (extracting double instead of integer).
- Fixed bugs in interpolating code.
- Got the code working with a extinction table.  Results are identical
  to on-the-fly calculations down to 0.3% difference.
- Optical-depth code is rather slow (~3 seconds).
- np.zeros vs np.empty does make some difference.
- Avoid having pt.msg inside loops (may make the code really slow).

*****

sys.path.append("../src_Py")
import readpyrat as rp

wl, flux1 = rp.readspectrum("eclipse_spectrum.dat", 0)
wl, flux2 = rp.readspectrum("eclipse_op_spectrum.dat", 0)

plt.figure(0, (8,5))
plt.clf()
plt.plot(wl, flux1, "b", label="calc")
plt.plot(wl, flux2, "r", label="interp", alpha=0.7)
plt.legend(loc="best")
plt.xlabel("Wavelength  (um)")
plt.ylabel("Flux")

plt.figure(1, (8,5))
plt.clf()
plt.plot(wl, (flux1-flux2)/flux1, "b")

*****

- Implemented trapezoidal-rule integration.

For the optical depth, it does not make a difference wether we use
trapezoidal or simpson integration, the results are the same.
Having said that, a cumulative integration for eclipse geometry saves
us one while loop, thus improving the code speed by a factor of ~30.
For transit geometry, the intervals change for each inpact parameter,
thus we need a more cumbersome calculation.
The transit calculation is faster though, (higher optical depth and
simpler spectrum calculation).

- Rewrote the optical depth code in a simpler modular way (one step
  after the other).  It turns out that stopping the extinction
  calculation based on maximum optdepth doesn't make much difference
  now (specially in the case using an extinction table).  So now I'm
  simply calculating the extinction at all layers (making the code
  much much easier to follow).

Timestamps:  (for eclipse run using a extinction table)
 Init:       0.000068
 Parse:      0.004753
 Inputs:     0.000550
 Wnumber:    0.081676
 Atmosph:    0.006295
 TLI:        0.138322
 Layers:     2.899218
 Voigt:      1.367720
 CIA read:   0.009534
 Extinct:    4.937923
 CIA intp:   0.026635
 O.Depth:    0.032118
 Spectrum:   0.471137

*****

Up next:
- The transit path calculation can be easily written in C, and speed
  up the optdepth calc by some 30%.
- Re-write the main, separate code into init() and run().
- Add reload_atm() so the code will work in the Bayesian framework.


*****  Sun May  3 12:16:41 EDT 2015  *****

Re-wrote the pyrat.py main(), separating into init() and run().  Pyrat
can be run from the Interpreter now:

import sys
sys.path.append("../")
import pyrat as p

py = p.init("transit_pyrat.cfg")
py = p.run(py)

*****

Implemented reloadatm() in makesample.py.
- Should I put it in readatm.py instead?
- Should I remove the layer resampling code?  reloadatm() wont work if
  the atmosphere was resampled.
- Changed the spline interpolation for the partition function from
  cubic to linear.  Differ ences are less than 0.05%.  Linear is ~40
  times faster.

Up next:
- Double check that reloadatm works.


*****  Sun May 31 15:32:53 EDT 2015  *****

Downloaded Borysow's CIA H2-He data.  Made scripts to reformat the
given files for use in pyrat:
  /home/patricio/ast/esp01/pyrat/develop/scripts/Borysow_merge_H2H2.py
  /home/patricio/ast/esp01/pyrat/develop/scripts/Borysow_merge_H2He.py

Added if-statement to skip Voigt-profile calculation when reading an
extinction-coefficient table.  Likewise for the line-transition
reading.

Put Voigt-profile related functions into its own module: voigt.py.

Added error message when an atmospheric species is not listed in the
molecular info file, and when a CIA species is not listed in the
atmospheric file.

Updated Borysow's H2-H2 CIA file, and added H2-He file.
Tested the Borysow's H2-He CIA absorption file.
Tested multiple CIA files.  The code seems to be working well in all cases.

Updated hitran.dat and molecules.dat files.
Updated demo files to include current CIA files.

*****

Up next:
 - Wait for AJ for TIPS news.
 - Implement and test multiple TLI files.
 - Start thinking about the Pyrat-Bay synnergy (even if MC3 is still
   not ready).
 - Setup the project's Github README (medium priority?).
 - Implement HITRAN CIA absorption (wait for AJ?) (low priority?).


*****  Sun Jun 14 17:59:13 EDT 2015  *****

Test Pyrat in OSX Mavericks:

By removing the compilation flags for open MP:
   extra_compile_args=['-fopenmp']
   extra_link_args=['-lgomp']
Pyrat compiles and runs in OSX 10.9.5 (Hurray!)

In general it's much faster than exo. However, the CIA interpolation
is really slow:

Timestamps:
            OSX:          Exo:
            ---------     ---------
 Init:       0.000178      0.000185
 Parse:      0.004507	   0.009187
 Inputs:     0.000679	   0.022783
 Wnumber:    0.136496	   1.416806
 Atmosph:    0.005580	   0.010307
 TLI:        0.097951	   0.159182
 Layers:     0.005007	   0.008150
 Voigt:      1.064820	   1.632617
 CIA read:   0.014392	   0.042466
 Extinct:    0.000007	   0.000036
 CIA intp:  34.148751	   0.047788
 O.Depth:    4.903640	  15.803781
 Spectrum:   0.409053	   0.470084

I should take a look, and think about implementing my own
interpolating function.

*****

Implemented modified version of reader.py (TEP file reader), renamed
as TEP.  Re-worked a bit.  Added method to print the parametes used in
the Pyrat-Bay project.

*****

Drafted pbay.py, the main Pyrat-Bay driver code.


*****  Sun Jun 21 12:05:55 EDT 2015  *****

In lineread.py: Included the number of transitions per isotope,
cleaned code (removed unused imports, standarized writing syntax).

In pconstants.py: Added Pyrat-Bay, Pyrat, and Lineread version (major,
minor, and revision).  Bumped Lineread minor revision to 1 (Now version
6.1.0).  Set Pyrat version to 1.0.0.

In readlinedb.py: Added check for TLI version.  Adapted to read TLI
version 6.1.  Standarized writting-to-screen syntax (use format()).

In ptools.py: Added unpack() function (wrapper of struct.unpack).

*****

Added CTIPS code as sub-module (using this command):
  git submodule add https://github.com/pcubillos/ctips
and re-factored the db_hitran.py code to use it.

Should I keep the sub-modules inside a 'modules/' folder?
I don't have any strong feeling about it.  I will keep them at
top-level directory for the moment.

Bumped Lineread minor version (Now version 6.2.0).
Bumped Pyrat revision (Now version 1.0.1).

*****

Re-factored readlinedb.py code to accept multiple TLI files.
Tested: 2DB in TLI1 + 1DB in TLI2
    vs. 1DB in TLI1 + 2DB in TLI2
    vs. 3DB in TLI1.
Multiple TLI entries produce the exact same output when given as a
single TLI file.

Cosmetic changes in objects.py and spectrum.py.

Bumped Pyrat minor version (Now version 1.1.0).


*****  Sun Jun 28 14:48:59 EDT 2015  *****

What about this?
- Let part_list continue being a path when we want to read a table,
  but let it be a flag (e.g., ctips) when we want to calculate it with
  a method.
- The method should not live in the db_ class, maybe in the driver?

*****

Added examples/ folder with respective sub-folders for each executable
of the project.  Moved the pyrat config files here (from run/).
Deleted the run/ folder.

Added lineread example config file: demo_hitran.cfg (for HITRAN H2O
database).

Updated eclipse and transit Pyrat config files.  Added demo
atmospheric file with vertical-uniform abundances to the pyrat_demo/
folder.  Still need to set the correct paths.

Tiny cosmetic edit in lineread.py.

In pconstants.py: Bumped lineread revision (now version 6.2.1).

*****

In objects.py: Created Spectrum class.  Moved Pyrat's wavenumber,
wavelength, and spectrum variables into the Spectrum object.  Declared
all of the Pyrat-object attributes.
Modified accordingly: argum.py, cia.py, extinction.py, makesample.py,
objects.py, optdepth.py, readlinedb.py, spectrum.py, and voigt.py.

In pconstants.py: Bumped Pyrat revision (now version 1.1.1).

*****

In objects.py: Capitalized the class-object definitions.  Edited
readlinedb.py accordingly.

In pconstants.py: Bumped Pyrat revision (now version 1.1.2).

*****

In objects.py: Implemented Spectrum.info(), Molecules.info(),
Linetransition.info(), Database.info(), and Isotopes.info().  There
are still some variables to patch, though.

In spectrum.py: Moved pyrat.intensity to pyrat.spec.intensity.

In pconstants.py: Bumped Pyrat revision (now version 1.1.3).

Should I change the name of the Molecules class to Species?
- I would like to, bu it would entail too many changes along the code.
  Keep thinking about it.

*****

Work to do:
- Continue implementing the info() methods for Atm, Voigt, Extinction,
  Cia, and Optdepth.
- Move path, raygrid, maxdepth variables to pyrat.od.
- Move files to their respective pyrat sub-classes.
- Same with pressure and radii-related variables.


*****  Fri Jul  3 10:54:46 EDT 2015  *****

"Replaced 2D interpolator.  In cia.py: Scipy's RectBivariateSpline() is
~30% faster than the previously used Scipy's inpterp2d().  interp2d
was also failing in OSX Mavericks (scipy version 0.10.1).

Updated pyrat eclipse and transit demo config files.

In pconstants.py: Bumped Pyrat revision (now version 1.1.4)."

*****

In cia.py: Added warning and stop execution when a CIA file does not
cover the requested wavenumber range for Pyrat.

In pconstants.py: Bumped Pyrat revision (now version 1.1.5).

*****

In objects.py: Added tmin and tmax variables to the Cia object to keep
the minimum and maximum allowed temperatures sampled by the CIA files.

In cia.py: Added warning and stop interpolatecia() execution when a
layer in the atmospheric file has a temperature beyond the tmin and
tmax boundaries.

In pconstants.py: Bumped Pyrat revision (now version 1.1.6).

*****

In objects.py: Added tmin and tmax variables to the Linetransition
object to keep the minimum and maximum allowed temperatures sampled by
the TLI files.  Updated info() to include tmin and tmax.

In readlinedb.py: Calculate tmin and tmax for each database in
readheader().

In extinction.py: Added warning and stop calc_extinction() execution
if the extinction-coefficient table attempts to sample a temperature
beyond the TLI limits.

In makesample.py: Added warning and stop makeradius() execution if the
atmospheric model has a layer with temperature beyond the TLI limits.

In pconstants.py: Bumped Pyrat revision (now version 1.1.7).

*****

Updated README.md to include the Team members, Getting started,
Install, Quick Demo, Be kind, and License sections.  Still needs work.

In pconstants.py: Bumped Pyrat-Bay revision (now version 0.0.2).

*****

In objects.py: implemented Atm.info() and Voigt.info().  Renamed
Voigt.width to Voigt.extent to avoid confusion.

In argum.py: Renamed the user-input voigtwidth variable to Vextent.
Corrected Voigt.extent variable name.

In voigt.py: Corrected Voigt.extent variable name.

In pconstants.py: Bumped Pyrat revision (now version 1.1.8).


*****  Sun Jul  5 12:02:48 EDT 2015  *****

In setup.py: added more comments and commented out the OMP extra
arguments.
In extcoeff.c: Fixed format printing argument for nadd, nskip, and
neval.
In pconstants.py: Bumped Pyrat-Bay revision (now version 0.0.3).

*****


In setup.py: added more comments and commented out the OMP extra
arguments.
In extcoeff.c: Fixed format printing argument for nadd, nskip, and
neval.
In pconstants.py: Bumped Pyrat-Bay revision (now version 0.0.3).

*****

Updated Pyrat code for extinction-coefficient table run.
In argum.py: Set the extinction-coefficient table tmin and tmax
defaults to None.  Check values only if tmin and tmax are not None.

In extinction.py: Added check for tmin and tmax to be defined when
producing an extinction-coefficient table.  Fixed path to wn and nspec
variables in pyrat (-> pyrat.spec).

In pconstants.py: Bumped Pyrat revision (now version 1.1.9).

*****

Added subsequent-indentation ('si') argument to msg() in ptools.py.
In pconstants.py: Bumped Pyrat revision (now version 1.1.10).

*****

Moved maxdepth and path variables from Pyrat to Optdepth and finished
implementing info() methods.

In objects.py: implemented Extinction.info(), Cia.info(), and
  Optdepth.info().  Moved maxdepth and path into Optdepth.
Edited argum.py, optdepth.py, and spectrum.py to relocate variables.
In pconstants.py: Bumped Pyrat revision (now version 1.1.11).

*****

Renamed Spectrum.nspec, Spectrum.onspec, and Extinction.nspec variable
names from nspec to nwave.
Files modified: blackbody.c, xtcoeff.c, profile.c, cia.py,
  extinction.py, makesample.py, objects.py, optdepth.py, spectrum.py,
  voigt.py.
In pconstants.py: Bumped Pyrat revision (now version 1.1.12).


*****  Sun Jul 12 13:58:51 EDT 2015  *****

Re-factor linereader:
- Make a script to format the Partition function files; thus, having a
  universal format.
- Then in lineread, the only choice will be specify a file, or a function.
- Move, PF read out of the DB programs into the driver.

Re-factored driver.c's dbdriver class:
- Now the partition function files have a standard format, otherwise are
  calculated from CTIPS.
- Added scripts to format PandS's H2O and Schwenke's TiO PF files.
- In driver.py: Moved partition function calculation (getpf) from child
  classes into here.
- In db_hitran.py: Removed getpf() function.
- In readlinedb.py: Adjusted the Lineread version compatibility.
- In pconstants.py: Bumped Lineread minor version (now version 6.3.0).

*****

Added top-level directory gitignore file.
In pconstants.py: Bumped Pyrat-Bay revision (now version 0.0.4).

*****

Fixed bug in db_hitran (irregular line lengths).
In pconstants.py: Bumped Lineread revision (now version 6.3.1).

*****

Added db_pands.py to read Partridge and Schwenke's H2O database.
In pconstants.py: Bumped Lineread revision (now version 6.3.2).


*****  Sun Jul 19 14:17:22 EDT 2015  *****

Moved pyrat.atmf (user-input atmospheric data) to pyrat.inputs.atm.
In pconstants.py: Bumped Pyrat revision (now version 1.1.13).

*****

Made the Hydrostatic-Equilibrium calculation a function in readatm.py.
Moved reloadatm() to readatm.py.
Re-defined amagat with the Loschmidt constant from scipy.constants.
Bumped Pyrat revision (now version 1.1.14).

*****

Check that the layers are given from the top to the bottom.
If the atm file is sorted from bottom up, reverse it and print a warning.
Changes in makeradius() from makesample.py.
In pconstants.py: Bumped Pyrat revision (now version 1.1.15).

*****

Added Plez' VO database reader (src_Py/db_voplez.py).
Added polynomial option ('poly') to calculate the partition function.
Added eV to Kayser conversion factor (eV2Kayser) in pconstants.
Bumped Lineread revision (now version 6.3.3).

*****

Standarized the DB readers in Lineread (P&S, HITRAN, Plez).
Cleaned up db_hitran, db_pands, and db_voplez.
Bumped Lineread revision (now version 6.3.4).


*****  Sun Jul 26 20:06:14 EDT 2015  *****

Propagate updates from AJ Foster for C code:

Moved C header files from src_C into include/.
Cleaned up setup.py.
Bumped Pyrat-Bay revision (now version 0.0.5).

*****

Moved ndarray indexing definitions (IND) into ind.h header file.
Bumped Pyrat-Bay revision (now version 0.0.6).

*****

Updated C extensions to be compatible with Numpy 1.8 API.
Bumped Pyrat-Bay revision (now version 0.0.7).

*****

Added pt.c (and expn.h) to calculate a temperature profile.
Still needs more work.
Bumped Pyrat-Bay revision (now version 0.0.8).

*****

Add verbosity control to Makefile.
Bumped Pyrat-Bay revision (now version 0.0.9).

*****

Added support for Python 3.
Bumped Pyrat-Bay revision (now version 0.0.10).


*****  Sun Aug  2 11:35:02 EDT 2015  *****

Updated database-binsearch routine to be more precise.
Renamed driver.py to db_driver.py
Removed from the HITRAN line-by-line data the transitions with unknown
Elow.
Bumped Lineread revision (now version 6.3.5).
Solves #15.

*****

Changed readwl() to readwave() for database readers.
Updated documentation.
Included molID in getHITinfo().
Bumped Lineread revision (now version 6.3.6).

*****

dded Schwenke TiO line-transition reader.
Bumped Lineread revision (now version 6.3.7).
Resolves #6

*****

Updated molecules.dat and hitran.dat input files.
Bumped Pyrat revision (now version 1.1.16).
Resolves #13

*****

Updated and renamed scripts to generate PF files.
Added script to format Borysow CS CIA files.
Bumped Pyrat-Bay revision (now version 0.0.11).

*****

In pconstants:
Replaced variable names of MTC and NTC by um and nm.
Renamed u to amu.
Replaced pc.units by ptools.u().  Store unit-conversion factors in
individual variables.
Bumped Pyrat revision (now version 1.1.17).
Resolves #12

*****

Refactored CIA as general cross-section routines.
Changed the Class CIA to Cross (and it's variable names).
Changed the argument name in the Pyrat config file from cia to csfile.
Updated the demo configuration files.
Checked that it works for CIA files (two species).
Bumped Pyrat revision (now version 1.1.18).
Advances status of #14.

*****

Changed density units from gr cm-3 to molecules cm-3.
Improved documentation of extinction() in extcoeff.c.
Bumped Pyrat revision (now version 1.1.19).


****  Sun Aug 16 14:21:17 EDT 2015  *****

Added script to format ExoMol CS data.
Though, this will fail when combining multiple-isotope data for a same
species.
Also needs to check that the user is not combining data from different
species.
Bumped Pyrat revision (now version 1.1.20).

*****

Enabled runs with no TLI files.
Fixed bug with CIA extinction-coefficient calculations (wrong number
of species).
Checked that 1-species and 2-species cross-section
extinction-coefficient calculations work.
Resolves #14.
Bumped Pyrat revision (now version 1.1.21).

*****

Updated code and documentation of the temperature-profile model.
Renamed to TCEA: three-channel Eddington approximation model.
Bumped Pyray-Bay revision (now version 0.0.12).
Resolves #3.


*****  Fr 8. Jan 16:15:28 CET 2016  *****

Added readpyrat.py to the scripts folder.
Fixed typo in README.md
Tested pyrat in Ubuntu machine at IWF.
Pyrat version 1.1.22.

*****

Added Sphinx documentation source files, following:
https://gist.github.com/pcubillos/e3c65769662532b43c67


*****  Sat Jan  9 23:26:54 CET 2016  *****

Added script to format HITRAN CIA data from Richard et al. (2012).
Advances #16.
Pyrat-Bay version 0.0.13.

*****

Moved software versioning variables into VERSION.py
from pconstants.py.
Pyrat-Bay version 0.0.14.

*****

Updated ctips submodule.
Pyrat version 1.1.23.


*****  Mon Jan 11 00:10:31 CET 2016  *****

Fixed bug with ideep when pyrat.od.depth reaches the bottom layer
before getting to maxdepth.
Pyrat version 1.1.24.


*****  Di 12. Jan 09:53:11 CET 2016  *****

Minor correction in readatm().
Removed old (obsolete piece of code).
Pyrat version 1.1.25.


*****  So 31. Jan 13:48:11 CET 2016  *****

Moved CS Temperature sort-desort out of CS-file loop.
Pyrat version 1.1.26.

*****

Initial folders re-organization to work as a package.

*****

Updated the makefile and setup.py.  C extensions are working.

*****

Split lineread.py as lread.py and the shell-executable lineread.py.
Refactored the lineread parser.
Got the lineread executable in shape.


*****  Mi 3. Feb 09:30:07 CET 2016  *****

Got Lineread running.
Using now the re-named, packaged pytips (previously ctips).

*****

Created 'modules/' folder to hold submodules.
Moved pytips to modules/.

*****

Added Lineread error/warning messages for missing/defaulted inputs,
respectively.

*****

Bumped Lineread version to 6.4.0.

*****

Finished refactoring pyrat as a package.

*****
