*****  Sun Jun  8 12:22:40 EDT 2014  *****

State summary:
--------------

To run (from run folder):
../src/pyrat.py -c config_pyrat00.cfg

Files:
------
pyrat.py:  Main code that call all sub-routines.
argum.py:  Process command-line arguments.
           Check inputs (files exist, physically acceptable values).
makesample.py:  makewn: make wavenumber sample for pyrat object:
                        p.wn, p.wnlow, p.wnhigh, p.wnstep, p.wnsize
readatm.py:  getkeywords: Read the keyword values from the atm file.
             getconstants: Read constant molecular values
             getprofiles: Read profile data table (rad, press, temp, abundances)
                          and calculate mean molec. mass and density.
             IGLdensity: Calculate pdensity using Ideal gas law.
readlinedb.py: readlinedb: read data bases headers, Iso names, masses, z, & c.
               TBD: Make checkrange to give only warnings if needed. 
               Next read line transitions info (in C!).

Issues:
-------
pt.msg cut's file paths in the middle of it.  It also doesn't obey linebreaks.
/home/patricio/ast/esp01/bart/develop/BART/inputs/atmosph_new.dat


*****  Sun Jun 15 16:13:44 EDT 2014  *****

readlinedb.py:  Renamed readlinedb to readheader.  Wrote checkrange.
ptools:  Added warning function.  Adapted msg to print sentences (i.e. 
         separate by \n).  Set up call to readlinetransition.
pconstants.py:  Added maxnamelen and strfmt.
objects.py:  Structured the linetransition, databases and isotopes classes.


*****  Sun Jun 22 13:40:06 EDT 2014  *****

Current plan: read line transitions in Python, send to cpyrat.  Check times.

readlinedb.py: Wrote readlintransition function.
ptools.py: Implemented binary search for TLI file.
pconstants.py added tlireclen.


*****  Sun Jun 29 12:45:21 EDT 2014  *****

I will use the log-pressure array as the base for the layers sampling.
Changed pyrat.atm -> pyrat.atmf  (the input atmospheric file)
Now pyrat.atm will be the modeling atm.

object.py: Renamed pyrat.uin -> pyrat.user
makesample.py: Started writing makeradius, Do Hydrostatic-Equilibrium
               calculation to get radius as a 
               function of pressure, then interpolate to get pyrat.atm vals.


*****  Sun Jul  6 12:13:29 EDT 2014  *****

No pyrat work this week.  Put lineread up to date, for use with multiple
databases.


*****  Sun Jul 27 14:07:20 EDT 2014  *****

Upgrade pylineread from 4.0 to 5.0:
Main difference: 5.0 contains the molecule name for the isotope.

Moved /home/patricio/ast/esp01/bart/pylineread/
to    /home/patricio/ast/esp01/bart/pylineread/pylineread4.0

Created /home/patricio/ast/esp01/bart/pylineread/pylineread5.0
with new implementation.

Modification from lineread v4.0:

- Changed endianness 'magic' variable to 'endian', changed the value to
  'b' or 'l' to be less criptic.
- Change wavelength to wavenumber
- Added isotopic abundance ratio info in TLI file.
- Added nTransitions before writting the transition data.
- Changed order in which the transition data is written: instead of
  wl1, id1, el1, gf1, wl2, id2, ... gfN.   do:
  wl1, wl2, ..., wlN, id1, id2, ... gfN.

updated PS, HIT, and TiO.

VO data is in: /home/esp01/code/bart/data/opacities/VO/


*****  Sun Aug  3 14:02:37 EDT 2014  *****

Adapt pyrat to pylineread5.0:
- Edited: - readlinedb.py
          - ptools.py

Updatded pyrat to work with pylineread5.0.  On the way fixed a couple of bugs:
  - readlinedb.py: The very last step when I count the number of transitions
    to read.
  - binsearch: Handle case when the sequential search went beyond boundaries.

I had to hack a few things, but will do a real test once we have /usr/local/
working again.  I foresee no troubles between now and then.

Stored old code in: /home/patricio/ast/esp01/pyrat/develop/old/readlinedb4.0/

That's it for now, I can't get much further without scipy working.  Now I will
continue upgrading transit to make it efficient.


*****  Sun Aug 10 13:37:02 EDT 2014  *****

Updated makewavenumner in makesample.py to print a warning on the modified
last sample point.  Also, make the sample to stay inside the user-defined
boundary.

In makeradius, changed interpolation kind from 'cubic' to 'slinear' because
cubic was failing.  Implemented partition-function interpolation from
pyrat.lt.db to pyrat.iso.

Fixed bug in readline.py: I was adding db.niso to iso.niso for each isotope
rather than for each db.


*****  Sun Aug 17 14:53:42 EDT 2014  *****

argum.c:
  - Removed maxratio argument. Added Tmin and Tmax arguments.
  - Updated calls pt.exit -> pt.error.
  - Updated string formatting calls (% -> {} format).
  - Added Doppler/Lorentz widths handling.

objects.py:
  - Added voigt and extinction objects and related variables.

readatm.py:
  - Using new molecules.dat file.  Added molecule symbol and universal ID info.

extinction.py:
  - Started extinction calculation.  Implemented The Doppler, Lorentz-width
    limits calculation and calculate the arrays.

pyrat.py:
  - Added ex.voigt() step.

Next to do: Calculate the Voigt-profiles grid.


*****  Sun Aug 24 12:55:13 EDT 2014  *****

extinction.py:
  - Implemented the calcvoigt() function to calculate the Voigt profiles.  The
    function uses a modified version of transit's newprofile wrapper and
    voigt.c module (modified as header file voigt.h).

Created the vprofile.c C-extension module:
  - Python wrapper to calculate the Voigt profile (called from extinction's
    calcvoigt() function).

voigt.h:
  - Copied and modified file from the transit project.

argum.py:
  - Renamed LDthresh to DLratio.


*****  Sun Aug 31 13:11:27 EDT 2014  *****

Implement cia.py to Read and interpolate the Collision Induced absorption.
  - Wrote two separate functions to read and interpolate the CIA absorption.
  - Investigate a bit more if I'm calculating well the extinction.

makesample.py:
  - makeradius(): Added molecular abundance and density profiles interpolation.
                  Updated most printing syntax.

pconstants.py:
  - Added amagat.


*****  Sun Jan 18 15:36:52 EST 2015  *****

Checking PyRaT status:
 + rename pyrat.user to pyrat.inputs
 - rewrite voigt to mimic current transit version 
 - implement readlinedb's line-info read (think well how to proceed!)
   - can I make one single calc-extinction function?
 - replace toomuch by taumax.
 - rework makeradius to mimic current transit version.
 + move makesample.py pyrat.user checks to argum.py (mostly)
 + added pyrat.molfile.
 + set defaults for the Doppler and Lorentz widths.
 + removed wn nspec, added wnosamp.

 + implemented isgreater in argum.py to check if a value is greater
   than a given threshold.

"Moved (most) of input checks from makesample.py to argum.py.
Implemented isgreater in argum.py to check if a value is greater than
a given threshold."


*****  Mon Jan 19 09:56:24 EST 2015  *****

Today is not Sunday, but it's holiday.  So, let's get into it:

New PyRaT status:
 + Rewrite voigt to mimic current transit version
 - Implement readlinedb's line-info read (think well how to proceed!)
   - Can I make one single calc-extinction function?
 + Rename toomuch by maxdepth.
 + Rework makeradius (see below)
 + Finished cleaning makeradius of input checks.
 + Removed minelow, voigtbin.
 + Update readatm to new format.

- If atm file contains radius, take it.
  Else, calculate it with hydrostatic equilibrium.

- pmin and pmax constrain the atmospheric layers to those within
  [pmin, pmax] but no resample.
- radmin and radmax override pmax and pmin.  Still no resample.

- If nlayers is defined, resample to equi-spaced Delta logP sample.
- If radstep is defined, resample to equi-spaced Delta radius.

- readatm woks for two atm-file column configurations:
    [radius] pressure temperature abundace1 ... abundanceN
  (radius is optional).

Removed voigtbin.  Made voigt.c human-understandable.


*****  Sun Jan 25 11:42:01 EST 2015  *****

Added tstep to argum.py, some minor comment adjustments.

Worked in extinction.py, wrote most of opacity function, wrote
read_extinction function, started calc_extinction function; functions
need proper documentation.

Added extcoef.c function to calculate the extinction coefficient at a
given layer, work in progress, needs comments and documentation.

Some updates to objects.py.

Added pprint function to ptools to print arrays in a nicer way.


*****  Sun Feb  1 13:24:50 EST 2015  *****

This will be the package structure from now on:

 -pyrat/
   |--lineread.py
   |--pyrat.py
   |
   |--pysrc/
   |--csrc/
   |--inputs/
   |--log/
   |--run/

Copied pylineread from transit repo into pyrat repo.  Merged with
pylineread5.0 (/home/patricio/ast/esp01/bart/pylineread/pylineread5.0/).
Rename as lineread.py.

Differences with transit repo:
- Endian encoding.
- wavelength --> wavenumber.

This week:
Re-engineered the package folders structure.
Finished vprofile function.
Added divisors function to ptools.
Fixed bug with species collision radius units.
Added extinction-coefficient C-routines to the repo.
Added lineread module (adapted to the pyrat code).


*****  Sun Feb  8 12:44:57 EST 2015  *****

Proof-of-concept, return pointers from C to Python:
  /home/patricio/ast/esp01/code/tests/python/pypointer

import vprofile as v
a = np.arange(10.) * np.pi
p = v.parse(a, 2, 3)
r = v.duplicate(p, 3)

But it appears to be breaking upon closure, ask Nate.

Open questions:
 - Can I keep a C pointer in C? What data type is?
 - How can I slice a PyArrayObject in C?

Renamed folders pysrc/ to src_Py/ and csrc/ to src_C/.
Started writing optical-depth module.
Finished writing (general) extinction-coefficient calculation C and
Python functions, runs from end to end, need to compare against
transit code.
Started sketching ext. coeff. interpolation function.
Fixed bugs in downsample function.
Found issues at the wavenumber ends, it appears it's not calculating
well the EC there.
Fixed bug in makerad sampling boundaries.
Fixed bug in makewn over-sampling array.
Fixed bug with linetransition isoid data type, added isoratio to
isotopes object, added index to voigt object, renamed profsize to size
in voigt object, added ec to extinction object.  Defined optdepth
object.


*****  Sun Mar  8 12:26:02 EDT 2015  *****

Done today:
- Renamed the repo from pyrat to Pyrat-Bay.  Made the repo private.
- Put the pyrat git repo into the Pyrat-Bay Github repo.
- Sorted repo folders.

Define the input atmospheric format:
- Per-layer data will have: pressure temperature abundances (no radius).
- Data is ordered from top layer to bottom layer.
- "#" indicate comments.
- "@" indicate a keyword:
  - '@ABUNDANCE' indicates if abundance is by mass or number.
  - '@PRESSURE' indicates the pressure units.
  - '@RADIUS indicates the radius units.
  - '@TEMPERATURE indicates the temperature units.
  - '@SPECIES' indicates the list of species.
  - '@DATA' indicates the per-layer data.

Reformated the atmospheric file.  Added current CIA files to repo.  
Updated the config file.  
Fixed readatm and makesample to read new format of atmospheric file.

"Updated the CIA inputs and cia.py to use the same format as the
atmospheric files."

"Implemented extinction-coefficient interpolation C code.  Need to test
the results.  Implemented valueinarray C code for pyrat.  Fixed bugs
in argum, extinction, and calc_extinction functions.
Added makeatm.py and optdepth.py to repo."


*****
